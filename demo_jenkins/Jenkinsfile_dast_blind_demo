def get_host(String env_var) {
    def match = env_var =~ 'http://(.+)/jenkins'
    return match[0][1]
}

node {
    stage("run test application") {
        deleteDir()
        sh "docker run -d --name dvna -p 9090:9090 -d appsecco/dvna:sqlite"
    }
    stage("scan application") {
        def dockerParamsString = "--entrypoint=''"
		        sh """echo '''basic:
  target_host: """+get_host(env.BUILD_URL)+"""
  target_port: 9090
  protocol: http
  project_name: ZAP_Auth_Demo
  environment: demo
  html_report: true
  junit_report: true
  reportportal:
    rp_host: https://rp.epam.com
    rp_token: 71028817-4f1f-4546-9574-bd4b72949989
    rp_project_name: artem_rozumenko_personal
    rp_launch_name: blind_dast
  sslyze: true
  zap:
    scan_types: xss,sqli
''' > scan-config.yaml
		"""

        def params = [
            "-t",
            "--name dast_blind"
        ]
        for (param in params) {
            dockerParamsString += " ${param}"
        }
        docker.image("getcarrier/dast:latest").inside(dockerParamsString) {
            sh "cp scan-config.yaml /tmp/scan-config.yaml"
            sh "run -s basic"
            sh "cp /tmp/reports/* $WORKSPACE"
            archiveArtifacts artifacts: '*.html'
			junit '*.xml'
        }
    }
    stage("stop test application") {
        sh "docker stop dvna"
        sh "docker rm dvna"
    }
}
